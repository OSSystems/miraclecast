#!/bin/bash

audiosink="alsasink device=hw:1,0"
outfile=/data/gstreamer.out
debug_level=3

export GST_DEBUG="*:$debug_level,rtpjitterbuffer:1,h264parse:4,videodecoder:4,video-info:6,imxvpudecoder:4,rtpbasedepayload:4"
echo "$0 starting up with arguments $*" >> ${outfile}.init
export GST_DEBUG_FILE=$outfile
export GST_DEBUG_NO_COLOR=1

function help {
   local scriptname="$(basename $0)"
   cat >&2 <<EOF

$scriptname [options]

play rtp stream

Options:
   -r                   Resolution
   -s <Width>x<height>  Scale
   -d <level>           Log level for gst
   -p <port>            Port for stream
   -a                   Enables audio
   -h                   Show this help

Examples:

 # play stream on port 7236
 $ $scriptname -p 7236
 # play stream with resolution 800x600
 $ $scriptname -s 800x600
 # play stream with audio
 $ $scriptname -a
 # play stream with debug level 3
 $ $scriptname -d 3

EOF
}

DEBUG='0'
AUDIO='0'
SCALE='0'

while getopts "r:d:as:p:h" optname
  do
    case "$optname" in
      "h")
        help
        exit 0
        ;;
      "d")
        DEBUG=`echo ${OPTARG} | tr -d ' '`
        ;;
      "r")
        RESOLUTION=`echo ${OPTARG} | tr -d ' '`
        ;;
      "a")
        AUDIO='1'
        ;;
      "p")
        PORT=`echo ${OPTARG} | tr -d ' '`
        ;;
      "s")
        SCALE='1'
        WIDTH=`echo ${OPTARG} | tr -d ' ' | cut -dx -f 1`
        HEIGHT=`echo ${OPTARG} | tr -d ' ' | cut -dx -f 2`
        ;;
      "?")
        echo "Unknown option $OPTARG"
        ;;
      *)
        echo "Unknown parameter $OPTARG"
        help
        exit 1
        ;;
    esac
  done

RUN="/usr/bin/gst-launch-1.0 "
RUN+="udpsrc port=$PORT caps=\"application/x-rtp, media=video\" ! rtpjitterbuffer latency=100 ! rtpmp2tdepay ! tsdemux "

if [ $AUDIO == '1' ]
then
  RUN+="name=demuxer demuxer. "
fi

RUN+="! queue max-size-buffers=0 max-size-time=0 ! h264parse ! imxvpudec ! videoconvert ! "

if [ $SCALE == '1' ]
then
  RUN+="videoscale method=1 ! video/x-raw,width=${WIDTH},height=${HEIGHT} ! "
fi

RUN+="imxipuvideosink use-vsync=true framebuffer=/dev/fb1 "

if [ $AUDIO == '1' ]
then
  RUN+="demuxer. ! queue max-size-buffers=0 max-size-time=0 ! aacparse ! avdec_aac ! audioconvert ! audioresample ! $audiosink" 2>&1 > /data/gstreamer.out
fi

echo "running: $RUN"
fbset -fb /dev/fb1 -xres 1280 -yres 720
echo 1280,2160 > /sys/class/graphics/fb1/virtual_size
echo 0 > /sys/class/graphics/fb1/blank
echo BGR24 > /sys/class/graphics/fb1/fsl_disp_fb_format
enable-fb1 &
echo "$0 running ${RUN}" >> ${outfile}.init
exec ${RUN}
